#include<bits/stdc++.h>
using namespace std;
const int N=1000000;
bool sieve[N+1];
void createsieve(){
	for(int i=2;i<=N;i++){
		sieve[i]=true;
	}
	for(int i=2;i*i<=N;i++){
		if(sieve[i]){
			for(int j=i*i;j<=N;j+=i){
				sieve[j]=false;
			}
		}
	}
}
vector<int>primes(int n){
	vector<int>p;
	for(int i=2;i<=n;i++){
		if(sieve[i]==true)p.push_back(i);
	}
	return p;
}
int main(){
	int l,r;
	cin>>l>>r;
	createsieve();
	vector<int>p=primes(sqrt(r));
	// for(auto a:p){
	// 	cout<<a<<"\n";
	// }
	int dummy[r-l+1];
	for(int i=0;i<r-l+1;i++){
		dummy[i]=1;
	}
	for(int i=0;i<p.size();i++){
		int firstmul=(p[i]*l)/p[i];
		if(firstmul<l)firstmul+=p[i];
		for(int j=max(firstmul,p[i]*p[i]);j<=r;j+=p[i]){
			dummy[j-l]=0;
		}
	}
	for(int i=0;i<r-l+1;i++){
		if(dummy[i])cout<<i+l<<"\n";
	}
}
